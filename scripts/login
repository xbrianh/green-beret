#!/bin/bash
set -euo pipefail

if [[ -z "${GREEN_BERET_HOME+x}" ]]; then
    echo 'Please `source environment`'
	exit 1
fi

tmp_private_key=$(mktemp)
function finish {
  rm -f "${tmp_private_key}"
}
trap finish EXIT

aws secretsmanager get-secret-value --secret-id ${GREEN_BERET_SECRET_ID} | jq -r '.SecretString' > ${tmp_private_key}
chmod go-r ${tmp_private_key}

GREEN_BERET_DNS=$(aws ec2 describe-instances --instance-ids $GREEN_BERET_INSTANCE_ID | jq -r .Reservations[0].Instances[0].PublicDnsName)

echo $(ls -alh ${tmp_private_key})

if [[ -e ${tmp_private_key} ]]; then
    # ssh -i ${tmp_private_key} -o "UserKnownHostsFile /dev/null" -o "StrictHostKeyChecking no" -o "LogLevel ERROR" ubuntu@$GREEN_BERET_DNS
    mosh --ssh="ssh -i ${tmp_private_key} -o \"UserKnownHostsFile /dev/null\" -o \"StrictHostKeyChecking no\" -o \"LogLevel ERROR\"" ubuntu@$GREEN_BERET_DNS
else
    echo "Unable to locate identity file"
fi
# aws ec2 describe-instances --instance-ids $GREEN_BERET_INSTANCE_ID | jq .Reservations[0].Instances[0].State
