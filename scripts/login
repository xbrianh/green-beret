#!/bin/bash
set -euo pipefail

if [[ -z "${GREEN_BERET_HOME+x}" ]]; then
    echo 'Please `source environment`'
	exit 1
fi

tmp_private_key=$(mktemp)
function finish {
  rm -f "${tmp_private_key}"
}
trap finish EXIT

if [[ "aws" == ${GREEN_BERET_PLATFORM} ]]; then
    aws secretsmanager get-secret-value --secret-id ${GREEN_BERET_AWS_KEY_PAIR_SECRET_ID} | jq -r '.SecretString' > ${tmp_private_key}
    chmod go-r ${tmp_private_key}
    
    if [[ -e ${tmp_private_key} ]]; then
        # ssh -i ${tmp_private_key} -o "UserKnownHostsFile /dev/null" -o "StrictHostKeyChecking no" -o "LogLevel ERROR" ubuntu@$GREEN_BERET_DNS
        mosh --ssh="ssh -i ${tmp_private_key} -o \"UserKnownHostsFile /dev/null\" -o \"StrictHostKeyChecking no\" -o \"LogLevel ERROR\"" ubuntu@$GREEN_BERET_DNS
    else
        echo "Unable to locate identity file"
    fi
elif [[ "gcp" == ${GREEN_BERET_PLATFORM} ]]; then
    # ssh -i ${GREEN_BERET_GCP_PRIVATE_KEY_FILEPATH} -o "UserKnownHostsFile /dev/null" -o "StrictHostKeyChecking no" -o "LogLevel ERROR" ubuntu@${GREEN_BERET_DNS}
    mosh --ssh="ssh -i ${GREEN_BERET_GCP_PRIVATE_KEY_FILEPATH} -o \"UserKnownHostsFile /dev/null\" -o \"StrictHostKeyChecking no\" -o \"LogLevel ERROR\"" ubuntu@${GREEN_BERET_DNS}
else
    echo "Unknown platform ${GREEN_BERET_PLATFORM}"
fi
